const mongoose = require('mongoose');
const fs = require('fs');
const path = require('path');

// ◊ò◊¢◊ô◊†◊™ ◊ß◊ï◊ë◊• access.env ◊©◊†◊û◊¶◊ê ◊û◊ó◊ï◊• ◊ú-server/
require('dotenv').config({ path: path.join(__dirname, '../access.env') });

// ◊ó◊ô◊ë◊ï◊® ◊ú÷æMongoDB Atlas
mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => console.log("‚úÖ Connected to MongoDB Atlas"))
.catch(err => console.error("‚ùå DB Connection Error:", err));

const dataDir = path.join(__dirname, 'data', '2026');

// ◊®◊©◊ô◊û◊™ ◊î◊ß◊ë◊¶◊ô◊ù ◊ï◊î◊ß◊ï◊ú◊ß◊¶◊ô◊ï◊™ ◊î◊û◊™◊ê◊ô◊û◊ï◊™
const collections = {

  students: 'students.json'

};

async function importData() {
  try {
    for (const [collection, fileName] of Object.entries(collections)) {
      const filePath = path.join(dataDir, fileName);
      if (!fs.existsSync(filePath)) {
        console.warn(`‚ö†Ô∏è File not found: ${filePath}`);
        continue;
      }

      const jsonData = JSON.parse(fs.readFileSync(filePath, 'utf-8'));

      // ◊û◊ó◊ô◊ß◊™ ◊†◊™◊ï◊†◊ô◊ù ◊ô◊©◊†◊ô◊ù ◊ë◊ê◊ï◊°◊£ ◊ú◊§◊†◊ô ◊î◊õ◊†◊°◊™ ◊î◊ó◊ì◊©◊ô◊ù
      await mongoose.connection.collection(collection).deleteMany({});
      console.log(`üóëÔ∏è Cleared old data from '${collection}'`);

      // ◊î◊õ◊†◊°◊™ ◊†◊™◊ï◊†◊ô◊ù ◊ó◊ì◊©◊ô◊ù
      if (jsonData.length > 0) {
        const result = await mongoose.connection.collection(collection).insertMany(jsonData);
        console.log(`üì• Imported ${result.insertedCount} documents into '${collection}'`);
      } else {
        console.log(`‚ö†Ô∏è No data found in ${fileName}`);
      }
    }
  } catch (err) {
    console.error("‚ùå Error importing data:", err);
  } finally {
    mongoose.disconnect();
  }
}

importData();
